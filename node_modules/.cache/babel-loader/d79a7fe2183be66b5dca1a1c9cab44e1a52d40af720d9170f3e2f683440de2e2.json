{"ast":null,"code":"var _jsxFileName = \"/home/pdenert/projects/webdev/recipeapp/client/src/components/recipedetails.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport { Stack } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RecipeDetails = () => {\n  _s();\n  const [form, setForm] = useState({\n    name: \"\",\n    servings: \"\",\n    time: \"\",\n    rating: \"\"\n  });\n  const {\n    _id\n  } = useParams();\n  const navigate = useNavigate();\n  useEffect(() => {\n    async function fetchData() {\n      const response = await fetch(`http://localhost:5050/record/${_id.toString()}`);\n      if (!response.ok) {\n        const message = `An error has occurred: ${response.statusText}`;\n        window.alert(message);\n        return;\n      }\n      const recipe = await response.json();\n      if (!recipe) {\n        window.alert(`Recipe with id ${_id} not found`);\n        navigate(\"/list\");\n        return;\n      }\n      setForm(recipe);\n    }\n    fetchData();\n    return;\n  }, [params.id, navigate]);\n\n  // These methods will update the state properties.\n  function updateForm(value) {\n    return setForm(prev => {\n      return {\n        ...prev,\n        ...value\n      };\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      ml: -1,\n      mr: -1\n    },\n    paddingTop: \"75px\",\n    textAlign: \"center\",\n    color: \"text.primary\",\n    bgcolor: \"background.default\",\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: form.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 9\n  }, this);\n};\n_s(RecipeDetails, \"vf/9rqKPhxBLcMpAHgTd384YxN0=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = RecipeDetails;\nexport default RecipeDetails;\nvar _c;\n$RefreshReg$(_c, \"RecipeDetails\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","Stack","jsxDEV","_jsxDEV","RecipeDetails","_s","form","setForm","name","servings","time","rating","_id","navigate","fetchData","response","fetch","toString","ok","message","statusText","window","alert","recipe","json","params","id","updateForm","value","prev","sx","ml","mr","paddingTop","textAlign","color","bgcolor","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/pdenert/projects/webdev/recipeapp/client/src/components/recipedetails.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router\";\nimport {Stack } from \"@mui/material\";\n\n\nconst RecipeDetails = () => {\n    const [form, setForm] = useState({\n        name: \"\",\n        servings: \"\",\n        time: \"\",\n        rating: \"\",\n      });\n     const { _id } = useParams();\n     const navigate = useNavigate();\n\n     useEffect(() => {\n       async function fetchData() {\n         const response = await fetch(`http://localhost:5050/record/${_id.toString()}`);\n\n         if (!response.ok) {\n           const message = `An error has occurred: ${response.statusText}`;\n           window.alert(message);\n           return;\n         }\n\n         const recipe = await response.json();\n         if (!recipe) {\n           window.alert(`Recipe with id ${_id} not found`);\n           navigate(\"/list\");\n           return;\n         }\n\n         setForm(recipe);\n       }\n\n       fetchData();\n    \n       return;\n     }, [params.id, navigate]);\n    \n     // These methods will update the state properties.\n     function updateForm(value) {\n       return setForm((prev) => {\n         return { ...prev, ...value };\n       });\n     }\n    return(\n        <Stack sx={{ml: -1, mr: -1}} paddingTop='75px' textAlign='center' color={\"text.primary\"} bgcolor={\"background.default\"}>\n            <h1>{form.name}</h1>\n        </Stack>\n        );\n}\n\nexport default RecipeDetails;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,WAAW,QAAQ,cAAc;AACrD,SAAQC,KAAK,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGrC,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC;IAC7BW,IAAI,EAAE,EAAE;IACRC,QAAQ,EAAE,EAAE;IACZC,IAAI,EAAE,EAAE;IACRC,MAAM,EAAE;EACV,CAAC,CAAC;EACH,MAAM;IAAEC;EAAI,CAAC,GAAGb,SAAS,CAAC,CAAC;EAC3B,MAAMc,QAAQ,GAAGb,WAAW,CAAC,CAAC;EAE9BF,SAAS,CAAC,MAAM;IACd,eAAegB,SAASA,CAAA,EAAG;MACzB,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,gCAA+BJ,GAAG,CAACK,QAAQ,CAAC,CAAE,EAAC,CAAC;MAE9E,IAAI,CAACF,QAAQ,CAACG,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAI,0BAAyBJ,QAAQ,CAACK,UAAW,EAAC;QAC/DC,MAAM,CAACC,KAAK,CAACH,OAAO,CAAC;QACrB;MACF;MAEA,MAAMI,MAAM,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACpC,IAAI,CAACD,MAAM,EAAE;QACXF,MAAM,CAACC,KAAK,CAAE,kBAAiBV,GAAI,YAAW,CAAC;QAC/CC,QAAQ,CAAC,OAAO,CAAC;QACjB;MACF;MAEAN,OAAO,CAACgB,MAAM,CAAC;IACjB;IAEAT,SAAS,CAAC,CAAC;IAEX;EACF,CAAC,EAAE,CAACW,MAAM,CAACC,EAAE,EAAEb,QAAQ,CAAC,CAAC;;EAEzB;EACA,SAASc,UAAUA,CAACC,KAAK,EAAE;IACzB,OAAOrB,OAAO,CAAEsB,IAAI,IAAK;MACvB,OAAO;QAAE,GAAGA,IAAI;QAAE,GAAGD;MAAM,CAAC;IAC9B,CAAC,CAAC;EACJ;EACD,oBACIzB,OAAA,CAACF,KAAK;IAAC6B,EAAE,EAAE;MAACC,EAAE,EAAE,CAAC,CAAC;MAAEC,EAAE,EAAE,CAAC;IAAC,CAAE;IAACC,UAAU,EAAC,MAAM;IAACC,SAAS,EAAC,QAAQ;IAACC,KAAK,EAAE,cAAe;IAACC,OAAO,EAAE,oBAAqB;IAAAC,QAAA,eACnHlC,OAAA;MAAAkC,QAAA,EAAK/B,IAAI,CAACE;IAAI;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjB,CAAC;AAEhB,CAAC;AAAApC,EAAA,CA9CKD,aAAa;EAAA,QAOEL,SAAS,EACRC,WAAW;AAAA;AAAA0C,EAAA,GAR3BtC,aAAa;AAgDnB,eAAeA,aAAa;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}